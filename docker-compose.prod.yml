version: '3.8' # Added version for good practice

services:
  django:
    build:
      context: .
      dockerfile: Dockerfile.prod
    networks:
      - local
    volumes:
      - ./webapp:/webapp
      - ./populate_neo4j.py:/webapp/populate_neo4j.py
    # Django app listens on 8000 INSIDE the docker network.
    # The 'ports' directive here is mainly for Gunicorn or if you needed direct access.
    # The internal nginx service will proxy to this.
    ports:
      - "8000:8000"
      - "11434:11434"
    env_file:
      - ./.env
    environment:
      - LOAD_DATA=true
    depends_on:
      neo4j:
        condition: service_healthy
    command: >
      bash -c "if [ \"$LOAD_DATA\" = \"true\" ]; then
                python3 /webapp/populate_neo4j.py;
              fi &&
              gunicorn --bind 0.0.0.0:8000 --timeout 120 --workers 4 --worker-class gevent webapp.wsgi:application"

  neo4j:
    networks:
      - local
    image: neo4j:5.23.0
    ports:
      - "7474:7474" # Neo4j HTTP
      - "7687:7687" # Neo4j Bolt
    volumes:
      - ./neo4j/data:/data
      - neo4j_logs:/logs
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "wget", "-O", "/dev/null", "http://localhost:7474"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

  nginx: # This is the Nginx for the docai application
    image: nginx:latest
    networks:
      - local
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf      # This Nginx's own config
      - ./frontend/build:/usr/share/nginx/html           # Serves the built React app
    ports:
      - "8081:80"  # <<< KEY CHANGE HERE: Map container's port 80 to host's port 8081
    depends_on:
      - django
      # - neo4j # Nginx doesn't directly depend on Neo4j, Django does.

networks:
  local:
    driver: bridge # Explicitly define bridge network

volumes:
  neo4j_data:
  neo4j_logs:
  # neo4j_import: # This was in your streamlit_ragpdf, ensure if needed for docai